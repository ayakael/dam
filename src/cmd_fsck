#!/bin/bash

# doc cmd_fsck {
#
# DESCRIPTION
#   cmd_fsck - Does series of tests on target's database file
#
# USAGE
#   cmd_fsck </path/to/git/dir> </path/to/target/dir> 
#
# DEPENDENCIES src/chk_deployed_ids src/chk_nonexistent_ids src/chk_metadata
#
# }

cmd_fsck() {
    local GIT_DIR="${1}"
    local TARGET="${2}"; shift 2
    local cmdList=(${@})
    local DB_FILE="${TARGET}/${_OPT_DB_FILE}"
    [[ ! -f "${DB_FILE}" ]] && return 3
    [[ ! -d "${GIT_DIR}/.git" ]] && return 2
    [[ "$(git -C "${GIT_DIR}" rev-list HEAD | tail -n 1)" != "$(awk 'BEGIN{FS="\t"}{if($1=="REPO_ID"){print $2}}' "${DB_FILE}")" ]] && return 2

    for cmd in ${cmdList[@]}; do
        case ${cmd} in
            deployed-ids)
                chk_deployed_ids "${TARGET}" "${DB_FILE}"
            ;;
    
            nonexistent-ids)
                chk_nonexistent_ids "${TARGET}" "${DB_FILE}"
            ;;

            metadata)
                chk_metadata "${GIT_DIR}" "${TARGET}" "${DB_FILE}"
            ;;

            duplicate-trackid)
                chk_duplicate_trackid "${DB_FILE}"
            ;;
        esac 
    done
}
