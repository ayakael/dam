#!/bin/bash

# doc import_images {
#
# DESCRIPTION
#   import_images - Imports files output from cueripper. Expects cueripper to output using
#   the following format:  %artist% - %album%\if(%unique%,%unique%,0), so that every album
#   is outputted in its own folder, first disc image is labeled 0.<ext>, and second disc image
#   is labeled 1.<ext>, and the cover is named folder.jpg
#
# USAGE
#   import_images </path/to/import/dir> </path/to/img> </path/to/cue> [<options>]
#
# OPTIONS
#   -a </path/to/accurip/log
#   -l </path/to/eac/log
#   -c </path/to/cover/img
#
# DEPENDENCIES src/print_meta_mtag src/add_bom src/fix_apos src/gen_cover src/file_name src/cueparser
#
# }


import_images() {
    local GIT_DIR="${1}"
    local SOURCE="${2}"
    local IMG="${3}"; local pathList[1]="${IMG}"
    local CUE="${4}"; local pathList[2]="${CUE}"; shift 3
    while true; do
        case ${1} in
            (-a) local ACCURIP="${2}"; local pathList[3]="${ACCURIP}"; shift 2;;
            (-c) local COVER="${2}"; local pathList[4]="${COVER}"; shift 2;;
            (-l) local LOG="${2}"; local pathList[5]="${LOG}"; shift 2;;
            (*) break ;;
        esac
    done

    # Checks if path is valid
    for path in ${pathList[@]}; do
        [[ -f "${path}" ]] || return 1
    done

    # Checks if ACCURIP should exist or not
    if [[ -n "${ACCURIP}" ]] && [[ "${SOURCE}" == "EAC" ]]; then return 2; fi 
    if [[ -z "${ACCURIP}" ]] && [[ "${SOURCE}" == "CUETOOLS" ]]; then return 2; fi

    # Parses cue file for DISCID
    local DISCID="$(grep "REM DISCID" ${TRACK_DIR}/cue | cut -d' ' -f3)"

    # Copies path to import folder
    mkdir -p "${GIT_DIR}/.import/${SOURCE}/$(dirname ${IMG} | sed 's|.*/||')"
    for path in ${pathList[@]}; do
        cp "${path}" "${GIT_DIR}/.import/${SOURCE}/${DISCID}/$(sed 's|.*/..||' <<< ${path})"
    done
}

