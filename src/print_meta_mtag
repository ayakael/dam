#!/bin/bash

# doc print_meta_mtag {
#
# DESCRIPTION
#   print_meta_mtag - Prints metadata of specified TRACKNO, from textfile following 
#   the MTAG specification. Outputs as standard FIELD=VALUE that can then be pipped into
#   metaflac. Can also be supplied with what tags to extract
#
# USAGE
#   print_meta_mtag </path/to/mtag/file> <track no> [<field_1> <field_2> <...>]
#
# }


print_meta_mtag() {
    local FILE=${1}
    local TRACK_NO="${2}"; shift 2
    local tagList=(${@})
   
    [[ -z "${tagList[@]}" ]] && local tagList=($(awk 'BEGIN{RS="[,]?\n";FS=" : "}{if($1!~"@"){print $1}}' ${FILE} | tr -d '[]{}" ' | awk '!seen[$0]++' | tail -n +3) IMAGEID)
    
    for tag in ${tagList[@]}; do
        # Finalizes output with IMAGEID
        [[ "${tag}" == "IMAGEID" ]] && { echo -n "IMAGEID=$(sed 's|.tags||g' <<< $(basename "${FILE}"))"; continue; }
        
        # Skips print_meta_field for field TITLE to keep it unique. Thus, if a track
        # does not have a defined TITLE, it won't inherit it from previous tracks
        [[ "${tag}" == "TITLE" ]] && { [[ -z "$(awk -v track=${TRACK_NO} 'BEGIN {RS="\n * }"}{if(NR==track){print $0}}' ${FILE} |  awk -v field="\"TITLE\"" 'BEGIN{RS="[,]?\n";FS=" : "}{if($1~field){print $2}}')" ]] && continue; }

        # Prints out VALUE of that TAG for that TRACK NO
        echo -n "${tag}=$(print_meta_field ${FILE} ${TRACK_NO} ${tag});"
    done
}

