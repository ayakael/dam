#!/bin/bash

# doc chk_deployed_ids {
#
# DESCRIPTION
#   chk_deployed_ids - Checks if all FLAC files present in TARGET is accounted for in DB_FILE
#
# USAGE
#   chk_deployed_ids </path/to/target/dir> </path/to/db/file/>
#
# DEPENDENCIES src/print_meta_flac 
# 
# }

chk_deployed_ids() {
    local TARGET="${1}"
    local DB_FILE="${2}"

    local flacList=($(find "${TARGET}"/* -name '*.flac' -printf "%p\n"))

    local COUNT=0
    for flac in ${flacList[@]}; do
        local COUNT=$(( ${COUNT} + 1 ))
        local ERR=false
        echo "[ ${COUNT} / ${#flacList[@]} ] Checking ${flac}"
        local METADATA="$(print_meta_flac "${TARGET}/${flac}")"
        local IMAGEID=$(awk 'BEGIN{RS=";";FS="="}{if($1=="IMAGEID"){print $2}}' <<< ${METADATA})
        local TRACKID=$(awk 'BEGIN{RS=";";FS="="}{if($1=="TRACKID"){print $2}}' <<< ${METADATA})
        
        if [[ -z "${IMAGEID+x}" ]] || [[ -z "${TRACKID+x}" ]]; then 
            _ansi up 2; echo -en '\033[K'; echo "[ ${COUNT} / ${#flacList[@]} ] ${flac} does not contain IMAGEID or TRACKID metadata"
            local ERR=true
            continue
        fi
        if [[ -z "$(awk -v imageid=${IMAGEID} -v trackid=${TRACKID} 'BEGIN{FS="\t"}{if($2==imageid && $3==trackid){print $0}}' ${DB_FILE})" ]]; then
            local ERR=true
            echo  "Fixing accounting for ${flac}" > ${STDERR}
            echo -e "true\t${IMAGEID}\t${TRACKID}\t${flac}" >> ${DB_FILE}
        elif [[ "$(awk -v imageid=${IMAGEID} -v trackid=${TRACKID} 'BEGIN{FS="\t"}{if($2==imageid && $3==trackid){print $4}}' ${DB_FILE})" != "${flac}" ]]; then
            local ERR=true
            echo "Fixing path for ${flac}"  > ${STDERR}
            gawk -i inplace -v imageid=${IMAGEID} -v trackid=${TRACKID} 'BEGIN{FS="\t"}{if($2==imageid && $3==trackid){$4=path}{print $0}}' ${DB_FILE}
        fi
        [[ "${ERR}" == "true" ]] && return 1 || return 0 
    done
}


