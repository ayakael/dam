#!/bin/bash

# doc import_tracks
#
# DESCRIPTION
#   import_tracks - Import tracks into git directory
#
# USAGE
#   import_tracks "</path/to/work/dir> <subpath/to/album>
#
# }

import_tracks() {
    local ROOT="${1}"
    local SUBFOL="${2}"
    local FOLDER="${ROOT}/${SUBFOL}"
    local CDCOUNT="$(cdcount "${FOLDER}")"
    local COUNT=1
    local SOURCE=FLAC

    while [[ ${COUNT} -le ${CDCOUNT} ]]; do

        # Generates file list depending on CD count
        if [[ "${CDCOUNT}" == 1 ]]; then
            local fileList=($(find "${FOLDER}"/* \( -name '*.flac' -or -name '*.mp3' -or -name '*.wav' \) -printf '%p\t'))
        else
            local fileList=($(find "${FOLDER}"/${COUNT}.* \( -name '*.flac' -or -name '*.mp3' \) -printf '%p\t'))
        fi

        if ismp3 ${fileList[@]}; then
            _msg EXEC "Converting MP3 files to FLAC"
            med_convert flac ${fileList[@]} >${STDERR} 2>&1
            [[ $? -eq 0 ]] && _msg OK || _msg WARN
            local SOURCE=MP3
        fi
        [[ "${SOURCE}" == "MP3" ]] && local fileList=($(printf "%s\t" ${fileList[@]} | sed 's|mp3|flac|g'))
        
        # Generates image
        _msg EXEC "Generating data for ${FOLDER} disk ${COUNT} of ${CDCOUNT}"
        gen_image ${fileList[@]} >${STDERR} 2>&1
        local EXIT="$?"
        if [[ ${EXIT} -eq 0 ]]; then 
            _msg OK
        elif [[ ${EXIT} -eq 2 ]]; then
            _msg WARN
        else
            _msg FAIL
            local COUNT=$(( ${COUNT} + 1 ))
            continue
        fi

        # Determines file name based on image's CHKSUM and acts accordingly
        metaflac --remove-all --dont-use-padding joined.flac
        local SHA256=$(sha256sum joined.flac | cut -d' ' -f1)
        local FILE_NAME=$(file_name ${SOURCE} ${SHA256})
        mv joined.flac ${FILE_NAME}.flac
        
        # Generates METADATA, CUE and MTAG
        _msg EXEC "Generating metadata for ${FOLDER} disk ${COUNT} of ${CDCOUNT}"
        local METADATA="$(gen_metadata "${SUBFOL}" ${COUNT} ${CDCOUNT})"
        gen_cue "${FILE_NAME}" ${METADATA} ${fileList[@]} > ${FILE_NAME}.cue
        [[ $? -ne 0 ]] && _msg WARN
        addbom ${FILE_NAME}.cue
        gen_mtag "${FILE_NAME}" ${METADATA} ${fileList[@]} > ${FILE_NAME}.tags
        [[ $? -ne 0 ]] && _msg WARN
        addbom ${FILE_NAME}.tags
        gen_cover "${FOLDER}" > ${FILE_NAME}.jpg
        [[ $? -ne 0 ]] && _msg WARN || _msg OK

        local COUNT=$(( ${COUNT} + 1 ))
    done
    
}
